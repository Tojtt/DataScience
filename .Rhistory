x <- list(a = 1:5, b = rnorm(10))
x
y <- list(a <- 1:5, b <- rnorm(10))
y
lapply(x,mean)
?list
x <- list(a<- matrix(1:4,2,2), b<-matrix(1:6, 3, 2))
x
lapply(x, function(elt) elt[,1])
lapply(x, function(elt){ elt[,1]})
lapply(x, function(elt){ elt[,2]})
"holloy"
holy
?mean
mean(1:10)
library(swirl)
swirl()
list(1,3,5)
list(rnorm(10), rnorm(20))
?str
str(list(rnorm(10), rnorm(20)))
swirl()
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
swirl()
library(swirl)
swirl(0
swirl()
swirl()
library(swirl)
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
swirl()
swirl()
swirl()
library(swirl)
swirl()
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(cls_list, class)
cls_vect <- sapply(cls_list, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
cls_vect
sum(flags$orange)
flag_colors<- flags(,11:17)
flag_colors<- flags[,11:17]
head(flag_colors)
lapply(flags_colors, sum)
lapply(flag_colors, sum)
class(head(flag_colors)
class(head(flag_colors))
sapply(flag_colors, sum)
class(sapply(flag_colors,sum))
sapply(flag_colors,sum)[2]
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat<- sapply(flag_shapes, range)
shape_mat
class(shapemat)
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
str(flags)
library(swirl)
swirl()
str(flags)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?solve
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(get = getd, set = set,setinverse = setinverse, getinverse = getinverse)
}
makeCacheMatrix( x = matrix(1:16,4,4))
makeCacheMatrix(x = matrix(1:16,4,4))
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(get = get, set = set,setinverse = setinverse, getinverse = getinverse)
}
makeCacheMatrix(x = matrix(1:16,4,4))
makeCacheMatrix(x = matrix(1:16,4,4))
get
x
x$get
x$setinverse
x$hohoh
x
x
x = matrix(1:16,4,4)
x <- matrix(1:16,4,4)
x
makeCacheMatrix(x = matrix(1:16,4,4))
numeric(1:4)
numeric(5)
numeric(1,5)
numeric(4
?numeric
as.numeric(factor(5:10))
numeric(factor(5:10))
numeric(100)
numeric(50)
numeric()
matrix()
makeCacheMatrix(matrix(1:16,4,4))
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector(c(1:10))
cachemean(c(1:10))
is.numeric(c(1:10))
is.numeric(1:10)
cachemean(1:10)
makeVector(1:10)
options(error = recover)
read.csv("nosuchfile")
rnorm(100)
?rpois
rpois(20, 5)
rpois(10, 50)
rpois(10, .1)
rpois(10, .5)
rpois(10, 1)
rpois(10, 10)
ppois(6,2)
ppois(2,2)
ppois(0,2)
ppois(1,2)
ppois(1.5,2)
ppois(1.9,2)
ppois(2,2)
ppois(1.9999,2)
ppois(2,2)
library(swirl)
swirl()
sample()
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20, 20)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0,1),100)
flips<-sample(c(0,1),100)
flips<-sample(c(0,1),100, prob = c(0.3,0.7))
flips<-sample(c(0,1),100,replacement =TRUE, prob = c(0.3,0.7))
options()
flips<-sample(c(0,1),100,replacement =TRUE, prob = c(0.3,0.7))
flips<-sample(c(0,1), 100,replace =TRUE, prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,.7)
flips2<-rbinom(1,size=100,.7)
flips2<-rbinom(100,size=1,.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
rpois(5,10)
replicate(rpois(5,10))
my_pois <- replicate(rpois(5,10))
my_pois <- replicate(100,rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
hist(cm)
cm
hist(cm)
system.time(ls)
pwd
dir()
swift()
library(swift)
library
library(swift)
?par
par(mfrow = c(2,2))
power <- read.csv("~/power_consumption/household_power_consumption.txt", header = TRUE, sep = ";")
power <- read.csv("~/DataScience/power_consumption/household_power_consumption.txt", header = TRUE, sep = ";")
power <- read.csv("~Hoang/DataScience/power_consumption/household_power_consumption.txt", header = TRUE, sep = ";")
power <- read.csv("~/Hoang/DataScience/power_consumption/household_power_consumption.txt", header = TRUE, sep = ";")
power <- read.csv("C:/Users/Hoang/DataScience/power_consumption/household_power_consumption.txt", header = TRUE, sep = ";")
power$Date = as.Date(as.character(power$Date), format = "%d/%m/%Y")
powerset <- power[c(grep("2007-02-01",power$Date),grep("2007-02-02",power$Date)),]
powerset$Time <- strptime(paste(powerset$Date,powerset$Time), format= "%Y-%m-%d %H:%M:%S")
powerset[,3:9] <- apply(powerset[,3:9],2, as.character)
powerset[,3:9] <- apply(powerset[,3:9],2, as.numeric)
power <- read.csv("C:/Users/Hoang/DataScience/power_consumption/household_power_consumption.txt", header = TRUE, sep = ";")
power$Date = as.Date(as.character(power$Date), format = "%d/%m/%Y")
powerset <- power[c(grep("2007-02-01",power$Date),grep("2007-02-02",power$Date)),]
powerset$Time <- strptime(paste(powerset$Date,powerset$Time), format= "%Y-%m-%d %H:%M:%S")
powerset[,3:9] <- apply(powerset[,3:9],2, as.character)
powerset[,3:9] <- apply(powerset[,3:9],2, as.numeric)
power <- read.csv("C:/Users/Hoang/DataScience/power_consumption/household_power_consumption.txt", header = TRUE, sep = ";")
power <- read.csv("C:/Users/Hoang/Desktop/DataScience/power_consumption/household_power_consumption.txt", header = TRUE, sep = ";")
power$Date = as.Date(as.character(power$Date), format = "%d/%m/%Y")
powerset <- power[c(grep("2007-02-01",power$Date),grep("2007-02-02",power$Date)),]
powerset$Time <- strptime(paste(powerset$Date,powerset$Time), format= "%Y-%m-%d %H:%M:%S")
powerset[,3:9] <- apply(powerset[,3:9],2, as.character)
powerset[,3:9] <- apply(powerset[,3:9],2, as.numeric)
head(powerset)
par(mfrow = c(2,2))
with(powerset, plot(powerset$Time, powerset$Global_active_power, type="l",xlab = "", ylab = "Global Active Power(kilowatts)"))
with(powerset, plot(powerset$Time, powerset$Voltage, type="l",xlab = "Voltage", ylab = "datetime"))
with(powerset, plot(powerset$Time, powerset$Global_active_power, type="l",xlab = "", ylab = "Global Active Power(kilowatts)"))
with(powerset, plot(powerset$Time, powerset$Voltage, type="l",xlab = "datetime", ylab = "Voltage"))
par(mfrow = c(2,2))
with(powerset, plot(powerset$Time, powerset$Global_active_power, type="l",xlab = "", ylab = "Global Active Power(kilowatts)"))
with(powerset, plot(powerset$Time, powerset$Voltage, type="l",xlab = "datetime", ylab = "Voltage"))
with(powerset, plot(powerset$Time, powerset$Sub_metering_1, type="l",xlab = "", ylab = "Energy sub metering"))
lines(powerset$Time, powerset$Sub_metering_2, col="red")
lines(powerset$Time, powerset$Sub_metering_3, col="blue")
?text
text("topright", c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lty = c(1,1,1),lwd = c(2.5,2.5,2.5), col = c("black", "red","blue"))
text("topright","(x,y)", c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lty = c(1,1,1),lwd = c(2.5,2.5,2.5), col = c("black", "red","blue"))
legend("topright","(x,y)", c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lty = c(1,1,1),lwd = c(2.5,2.5,2.5), col = c("black", "red","blue",bty="n"))
legend("topright","(x,y)", c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lty = c(1,1,1),lwd = c(2.5,2.5,2.5), col = c("black", "red","blue",box.lwd =0))
par(mfrow = c(2,2))
with(powerset, plot(powerset$Time, powerset$Global_active_power, type="l",xlab = "", ylab = "Global Active Power(kilowatts)"))
with(powerset, plot(powerset$Time, powerset$Voltage, type="l",xlab = "datetime", ylab = "Voltage"))
with(powerset, plot(powerset$Time, powerset$Sub_metering_1, type="l",xlab = "", ylab = "Energy sub metering"))
lines(powerset$Time, powerset$Sub_metering_2, col="red")
lines(powerset$Time, powerset$Sub_metering_3, col="blue")
legend("topright","(x,y)", c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lty = c(1,1,1),lwd = c(2.5,2.5,2.5), col = c("black", "red","blue",box.lwd =0))
par(mfrow = c(2,2))
with(powerset, plot(powerset$Time, powerset$Global_active_power, type="l",xlab = "", ylab = "Global Active Power(kilowatts)"))
with(powerset, plot(powerset$Time, powerset$Voltage, type="l",xlab = "datetime", ylab = "Voltage"))
with(powerset, plot(powerset$Time, powerset$Sub_metering_1, type="l",xlab = "", ylab = "Energy sub metering"))
lines(powerset$Time, powerset$Sub_metering_2, col="red")
lines(powerset$Time, powerset$Sub_metering_3, col="blue")
legend("topright","(x,y)", c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"),bty="n", lty = c(1,1,1),lwd = c(2.5,2.5,2.5), col = c("black", "red","blue",box.lwd =0))
par(mfrow = c(2,2))
with(powerset, plot(powerset$Time, powerset$Global_active_power, type="l",xlab = "", ylab = "Global Active Power(kilowatts)"))
with(powerset, plot(powerset$Time, powerset$Voltage, type="l",xlab = "datetime", ylab = "Voltage"))
with(powerset, plot(powerset$Time, powerset$Sub_metering_1, type="l",xlab = "", ylab = "Energy sub metering"))
lines(powerset$Time, powerset$Sub_metering_2, col="red")
lines(powerset$Time, powerset$Sub_metering_3, col="blue")
legend("topright","(x,y)", c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lty = c(1,1,1),lwd = c(2.5,2.5,2.5), col = c("black", "red","blue"))
par(mfrow = c(2,2))
with(powerset, plot(powerset$Time, powerset$Global_active_power, type="l",xlab = "", ylab = "Global Active Power(kilowatts)"))
with(powerset, plot(powerset$Time, powerset$Voltage, type="l",xlab = "datetime", ylab = "Voltage"))
with(powerset, plot(powerset$Time, powerset$Sub_metering_1, type="l",xlab = "", ylab = "Energy sub metering"))
lines(powerset$Time, powerset$Sub_metering_2, col="red")
lines(powerset$Time, powerset$Sub_metering_3, col="blue")
legend("topright","(x,y)", c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"),bty="n", lty = c(1,1,1),lwd = c(2.5,2.5,2.5), col = c("black", "red","blue",box.lwd =0))
with(powerset, plot(powerset$Time, powerset$Global_reactive_power, type="l",xlab = "datetime", ylab = "Global_reactive_power"))
