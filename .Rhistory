x <- list(a = 1:5, b = rnorm(10))
x
y <- list(a <- 1:5, b <- rnorm(10))
y
lapply(x,mean)
?list
x <- list(a<- matrix(1:4,2,2), b<-matrix(1:6, 3, 2))
x
lapply(x, function(elt) elt[,1])
lapply(x, function(elt){ elt[,1]})
lapply(x, function(elt){ elt[,2]})
"holloy"
holy
?mean
mean(1:10)
library(swirl)
swirl()
list(1,3,5)
list(rnorm(10), rnorm(20))
?str
str(list(rnorm(10), rnorm(20)))
swirl()
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
swirl()
library(swirl)
swirl(0
swirl()
swirl()
library(swirl)
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
swirl()
swirl()
swirl()
library(swirl)
swirl()
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(cls_list, class)
cls_vect <- sapply(cls_list, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
cls_vect
sum(flags$orange)
flag_colors<- flags(,11:17)
flag_colors<- flags[,11:17]
head(flag_colors)
lapply(flags_colors, sum)
lapply(flag_colors, sum)
class(head(flag_colors)
class(head(flag_colors))
sapply(flag_colors, sum)
class(sapply(flag_colors,sum))
sapply(flag_colors,sum)[2]
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat<- sapply(flag_shapes, range)
shape_mat
class(shapemat)
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
str(flags)
library(swirl)
swirl()
str(flags)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
